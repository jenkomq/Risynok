#pragma warning(disable : 4996)
#include <locale.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>

// вычислить сумму положительных эл-тов
float sum_positive(float* arr, int n) {
    float sum = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] > 0) {
            sum += arr[i];
        }
    }
    return sum;
}

// вычислить произведение эл-тов между максимальным и минимальным по модулю
float product_between_max_min(float* arr, int n) {
    int max_index = 0;
    int min_index = 0;
    for (int i = 1; i < n; i++) {
        if (fabs(arr[i]) > fabs(arr[max_index])) {
            max_index = i;
        }
        if (fabs(arr[i]) < fabs(arr[min_index])) {
            min_index = i;
        }
    }

    int start = max_index < min_index ? max_index : min_index;
    int end = max_index > min_index ? max_index : min_index;

    float product = 1;
    for (int i = start + 1; i < end; i++) {
        product *= arr[i];
    }

    return product;
}

// сортировка пузырьком
void bubble_sort(float* arr, int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                float temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

// функция вывода элементов массива
void print_array(float* arr, int n) {
    printf("элементы массива: ");
    for (int i = 0; i < n; i++) {
        printf("%.2f ", arr[i]);
    }
    printf("\n");
}

int main() {
    setlocale(LC_ALL, "russian");
    int n;
    printf("введите размер массива: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("размер массива должен быть положительным.\n");
        return 1;
    }

    float* arr = (float*)malloc(n * sizeof(float));
    if (arr == NULL) {
        puts("ошибка");
        return -1;
    }

    printf("введите элементы массива:\n");
    for (int i = 0; i < n; i++) {
        scanf("%f", &arr[i]);
    }

    float sum_pos = sum_positive(arr, n);
    printf("сумма положительных элементов: %.2f\n", sum_pos);

    float product = product_between_max_min(arr, n);
    printf("произведение элементов между максимальным и минимальным по модулю: %.2f\n", product);

    bubble_sort(arr, n);

    printf("упорядоченный массив:\n");
    print_array(arr, n);

    free(arr);

    return 0;
}#include <stdio.h>
#include <locale.h>
#include <time.h>
#include <math.h>

void fillarr(float* arr);
void printarr(float* arr);
float pozitiv(float* arr);
float proizv(float* arr);

int main() {
  setlocale(LC_ALL, "Rus");
  srand(time(NULL));
  float a[20];
  fillarr(a);
  printarr(a);
  float a1 = pozitiv(a);
  printf("\n сумма 2 элементов массива равна %f ", a1);
  float b = proizv(a);
  printf("\n Произведение %f ", b);
  return 0;
}
void fillarr(float* arr) {
  for (int i = 0; i < 20; i++) {
    arr[i] = rand() % 51 - 15;
  }
}

void printarr(float* arr) {
  for (int i = 0; i < 20; i++) {
    printf("%.2f ", arr[i]);
  }  
}
float pozitiv(float* arr)
{
  float summ = 0;
  for (int i = 0; i < 20; i++) {
    if (arr[i] > 0)
    {
      summ += arr[i];
    }
  }
  return summ;
}

float proizv(float* arr)
{
  float max = -99, min = 99, prod = 1;
  int mx, mn;
  for (int i = 0; i < 20; i++) {
    if (arr[i] > max) {
      max = arr[i];
      mx = i;
    }
  }
  for (int i = 0; i < 20; i++) {
    if (arr[i] < min) {
      min = arr[i];
      mn = i;
    }
  }
  if (mn > mx) {
    for (int i = mx; i <= mn; i++) {
      prod *= arr[i];
    }
  }
  else {
    for (int i = mn; i <= mx; i++) {
      prod *= arr[i];
    }
  }
  return prod;
}
