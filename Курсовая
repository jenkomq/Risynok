#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define _crt_secure_no_deprecate
#include <stdio.h>
#include <stdlib.h>
#define _use_math_defines
#include <math.h>
#include <locale.h>
#pragma warning(disable : 4996)


// функция для расчета необходимого количества плиток
int calculatetiles(int roomlength, int roomwidth, int wallprotrusion) {
    int totaltiles;

    // вычисление площади пола без учета выступов стены
    int floorarea = roomlength * roomwidth;

    // вычисление площади пола с учетом выступов стены
    int adjustedfloorarea = floorarea + 2 * (roomlength + roomwidth) * wallprotrusion;

    // вычисление количества плиток
    totaltiles = adjustedfloorarea / 1; // предполагается, что размер плитки 1 кв.м.

    return totaltiles;
}

typedef struct {
    char type[20];
    double length;
    double width;
    double price;
} tile;

typedef struct {
    char name[50];
    double length;
    double width;
    double wallprotrusion;
    double area;
    double volume;
} room;

tile* readtilesfromfile(char* filename, int* numtiles) {

    FILE* file = fopen(filename, "r");
    if (file == NULL) {
        printf("не удалось открыть файл\n");
        return NULL;
    }

    fscanf(file, "%d", numtiles);
    tile* tiles = (tile*)malloc((*numtiles) * sizeof(tile));

    for (int i = 0; i < *numtiles; i++) {
        fscanf(file, "%s %lf %lf %lf", tiles[i].type, &tiles[i].length, &tiles[i].width, &tiles[i].price);
    }

    fclose(file);
    return tiles;
}

void writedatatofile(char* filename, room* room, int numtiles, tile* tiles) {
    FILE* file = fopen(filename, "w");
    if (file == NULL) {
        printf("не удалось открыть файл\n");
        return;
    }

    // запись информации о помещении
    fprintf(file, "%s %.2lf %.2lf %.2lf\n", room->name, room->length, room->width, room->wallprotrusion);

    // запись информации о плитках
    fprintf(file, "%d\n", numtiles);
    for (int i = 0; i < numtiles; i++) {
        fprintf(file, "%s %.2lf %.2lf %.2lf\n", tiles[i].type, tiles[i].length, tiles[i].width, tiles[i].price);
    }

    fclose(file);
}

void printroom(const room* room) {
    int totallength = (int)room->length;
    int totalwidth = (int)room->width;

    for (int i = 0; i < totallength + 2; i++) {
        printf("-");
    }
    printf("\n");

    for (int i = 0; i < totalwidth; i++) {
        printf("|");
        for (int j = 0; j < totallength; j++) {
            printf(" ");
        }
        printf("|\n");
    }

    for (int i = 0; i < totallength + 2; i++) {
        printf("-");
    }

    printf("\n");
}

int main() {
    setlocale(LC_ALL, "rus");
    char filename[100];
    int choice;
    room room;
    tile* tiles = NULL;
    int numtiles = 0;

    printf("введите название файла: ");
    scanf("%s", filename);

    // создание и открытие файла для записи
    FILE* file = fopen(filename, "w");
    if (file == NULL) {
        printf("не удалось открыть файл\n");
        return -1;
    }
    fclose(file);

    // чтение данных из файла
    tiles = readtilesfromfile(filename, &numtiles);
    setlocale(LC_ALL, "rus");
    // переменные для хранения размеров комнаты и выступов стены
    int roomlength, roomwidth, wallprotrusion;
    // переменная для выбора действия в меню
    // переменные для ввода новых данных
    char continueinput;

    while (1) {
        printf("\n********************главное меню********************\n");
        printf("1) рассчитать количество плиток\n");
        printf("2) вывести изображение помещения\n");
        printf("3) запись информации в файл\n");
        printf("4) изменить данные о помещении\n");
        printf("5) считать данные из файла\n");
        printf("6) вывести информацию о размерах плитки\n");
        printf("7) выйти из программы\n");
        printf("введите выбор (1-7): ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("введите длину комнаты: ");
            scanf("%d", &roomlength);
            printf("введите ширину комнаты: ");
            scanf("%d", &roomwidth);
            printf("введите выступы стены: ");
            scanf("%d", &wallprotrusion);
            printf("необходимое количество плиток: %d\n", calculatetiles(roomlength, roomwidth, wallprotrusion));
            break;
        case 2: // вывести изображение помещения
            printroom(&room);
            break;

        case 3: // запись информации в файл
            writedatatofile(filename, &room, numtiles, tiles);
            printf("данные успешно записаны в файл\n");
            break;

        case 4: // изменить данные о помещении
            printf("введите новое название помещения: ");
            scanf("%s", room.name);
            printf("введите новую длину помещения (в метрах): ");
            scanf("%lf", &room.length);
            printf("введите новую ширину помещения (в метрах): ");
            scanf("%lf", &room.width);
            printf("введите новые выступы стены (в метрах): ");
            scanf("%lf", &room.wallprotrusion);
            break;

        case 5: // считать данные из файла
            // код для считывания данных из файла
            break;

        case 6:
            // код для вывода информации о размерах плитки
            break;

        case 7:
            // код для выхода из программы
            break;
        }
    }

    return 0;
}
